class ApplicationLayer:
    def send(self, data):
        print("Application Layer: Providing network services")
        return f"App({data})"
    
    def receive(self, data):
        print("Application Layer: Delivering data to the application")
        print("Received data:", data[4:-1])

class PresentationLayer:
    def send(self, data):
        print("Presentation Layer: Formatting and encrypting data")
        return f"Pres({data})"
    
    def receive(self, data):
        print("Presentation Layer: Decoding and decrypting data")
        return data[5:-1]

class SessionLayer:
    def send(self, data):
        print("Session Layer: Managing sessions and connections")
        return f"Sess({data})"
    
    def receive(self, data):
        print("Session Layer: Handling session establishment")
        return data[5:-1]

class TransportLayer:
    def send(self, data):
        print("Transport Layer: Ensuring reliable transmission (TCP/UDP)")
        return f"Trans({data})"
    
    def receive(self, data):
        print("Transport Layer: Managing segmentation and reassembly")
        return data[6:-1]

class NetworkLayer:
    def send(self, data):
        print("Network Layer: Determining best path for data transmission")
        return f"Net({data})"
    
    def receive(self, data):
        print("Network Layer: Processing IP addressing and routing")
        return data[4:-1]

class DataLinkLayer:
    def send(self, data):
        print("Data Link Layer: Framing data for transmission")
        return f"DLL({data})"
    
    def receive(self, data):
        print("Data Link Layer: Removing framing and handling MAC addresses")
        return data[4:-1]

class PhysicalLayer:
    def send(self, data):
        print("Physical Layer: Converting data to electrical/optical signals")
        return f"PHY({data})"
    
    def receive(self, data):
        print("Physical Layer: Receiving raw bit stream and converting back to data")
        return data[4:-1]

# Simulating Data Transmission
def osi_send(data):
    print("\n--- Sending Data ---")
    app = ApplicationLayer()
    pres = PresentationLayer()
    sess = SessionLayer()
    trans = TransportLayer()
    net = NetworkLayer()
    dll = DataLinkLayer()
    phy = PhysicalLayer()
    
    # Passing through OSI layers (Top to Bottom)
    data = app.send(data)
    data = pres.send(data)
    data = sess.send(data)
    data = trans.send(data)
    data = net.send(data)
    data = dll.send(data)
    data = phy.send(data)
    
    print("\nData sent: ", data)
    return data

# Simulating Data Reception
def osi_receive(data):
    print("\n--- Receiving Data ---")
    app = ApplicationLayer()
    pres = PresentationLayer()
    sess = SessionLayer()
    trans = TransportLayer()
    net = NetworkLayer()
    dll = DataLinkLayer()
    phy = PhysicalLayer()
    
    # Passing through OSI layers (Bottom to Top)
    data = phy.receive(data)
    data = dll.receive(data)
    data = net.receive(data)
    data = trans.receive(data)
    data = sess.receive(data)
    data = pres.receive(data)
    app.receive(data)

# Testing the OSI Model Simulation
data_sent = osi_send("Hello, OSI Model!")
osi_receive(data_sent)